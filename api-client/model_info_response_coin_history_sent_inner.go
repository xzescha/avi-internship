/*
API Avito shop

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InfoResponseCoinHistorySentInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfoResponseCoinHistorySentInner{}

// InfoResponseCoinHistorySentInner struct for InfoResponseCoinHistorySentInner
type InfoResponseCoinHistorySentInner struct {
	// Имя пользователя, которому отправлены монеты.
	ToUser *string `json:"toUser,omitempty"`
	// Количество отправленных монет.
	Amount *int32 `json:"amount,omitempty"`
}

// NewInfoResponseCoinHistorySentInner instantiates a new InfoResponseCoinHistorySentInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfoResponseCoinHistorySentInner() *InfoResponseCoinHistorySentInner {
	this := InfoResponseCoinHistorySentInner{}
	return &this
}

// NewInfoResponseCoinHistorySentInnerWithDefaults instantiates a new InfoResponseCoinHistorySentInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoResponseCoinHistorySentInnerWithDefaults() *InfoResponseCoinHistorySentInner {
	this := InfoResponseCoinHistorySentInner{}
	return &this
}

// GetToUser returns the ToUser field value if set, zero value otherwise.
func (o *InfoResponseCoinHistorySentInner) GetToUser() string {
	if o == nil || IsNil(o.ToUser) {
		var ret string
		return ret
	}
	return *o.ToUser
}

// GetToUserOk returns a tuple with the ToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseCoinHistorySentInner) GetToUserOk() (*string, bool) {
	if o == nil || IsNil(o.ToUser) {
		return nil, false
	}
	return o.ToUser, true
}

// HasToUser returns a boolean if a field has been set.
func (o *InfoResponseCoinHistorySentInner) HasToUser() bool {
	if o != nil && !IsNil(o.ToUser) {
		return true
	}

	return false
}

// SetToUser gets a reference to the given string and assigns it to the ToUser field.
func (o *InfoResponseCoinHistorySentInner) SetToUser(v string) {
	o.ToUser = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *InfoResponseCoinHistorySentInner) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseCoinHistorySentInner) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *InfoResponseCoinHistorySentInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *InfoResponseCoinHistorySentInner) SetAmount(v int32) {
	o.Amount = &v
}

func (o InfoResponseCoinHistorySentInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfoResponseCoinHistorySentInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ToUser) {
		toSerialize["toUser"] = o.ToUser
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableInfoResponseCoinHistorySentInner struct {
	value *InfoResponseCoinHistorySentInner
	isSet bool
}

func (v NullableInfoResponseCoinHistorySentInner) Get() *InfoResponseCoinHistorySentInner {
	return v.value
}

func (v *NullableInfoResponseCoinHistorySentInner) Set(val *InfoResponseCoinHistorySentInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInfoResponseCoinHistorySentInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInfoResponseCoinHistorySentInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfoResponseCoinHistorySentInner(val *InfoResponseCoinHistorySentInner) *NullableInfoResponseCoinHistorySentInner {
	return &NullableInfoResponseCoinHistorySentInner{value: val, isSet: true}
}

func (v NullableInfoResponseCoinHistorySentInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfoResponseCoinHistorySentInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


