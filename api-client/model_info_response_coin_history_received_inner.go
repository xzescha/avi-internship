/*
API Avito shop

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InfoResponseCoinHistoryReceivedInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfoResponseCoinHistoryReceivedInner{}

// InfoResponseCoinHistoryReceivedInner struct for InfoResponseCoinHistoryReceivedInner
type InfoResponseCoinHistoryReceivedInner struct {
	// Имя пользователя, который отправил монеты.
	FromUser *string `json:"fromUser,omitempty"`
	// Количество полученных монет.
	Amount *int32 `json:"amount,omitempty"`
}

// NewInfoResponseCoinHistoryReceivedInner instantiates a new InfoResponseCoinHistoryReceivedInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfoResponseCoinHistoryReceivedInner() *InfoResponseCoinHistoryReceivedInner {
	this := InfoResponseCoinHistoryReceivedInner{}
	return &this
}

// NewInfoResponseCoinHistoryReceivedInnerWithDefaults instantiates a new InfoResponseCoinHistoryReceivedInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfoResponseCoinHistoryReceivedInnerWithDefaults() *InfoResponseCoinHistoryReceivedInner {
	this := InfoResponseCoinHistoryReceivedInner{}
	return &this
}

// GetFromUser returns the FromUser field value if set, zero value otherwise.
func (o *InfoResponseCoinHistoryReceivedInner) GetFromUser() string {
	if o == nil || IsNil(o.FromUser) {
		var ret string
		return ret
	}
	return *o.FromUser
}

// GetFromUserOk returns a tuple with the FromUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseCoinHistoryReceivedInner) GetFromUserOk() (*string, bool) {
	if o == nil || IsNil(o.FromUser) {
		return nil, false
	}
	return o.FromUser, true
}

// HasFromUser returns a boolean if a field has been set.
func (o *InfoResponseCoinHistoryReceivedInner) HasFromUser() bool {
	if o != nil && !IsNil(o.FromUser) {
		return true
	}

	return false
}

// SetFromUser gets a reference to the given string and assigns it to the FromUser field.
func (o *InfoResponseCoinHistoryReceivedInner) SetFromUser(v string) {
	o.FromUser = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *InfoResponseCoinHistoryReceivedInner) GetAmount() int32 {
	if o == nil || IsNil(o.Amount) {
		var ret int32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfoResponseCoinHistoryReceivedInner) GetAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *InfoResponseCoinHistoryReceivedInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int32 and assigns it to the Amount field.
func (o *InfoResponseCoinHistoryReceivedInner) SetAmount(v int32) {
	o.Amount = &v
}

func (o InfoResponseCoinHistoryReceivedInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfoResponseCoinHistoryReceivedInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromUser) {
		toSerialize["fromUser"] = o.FromUser
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return toSerialize, nil
}

type NullableInfoResponseCoinHistoryReceivedInner struct {
	value *InfoResponseCoinHistoryReceivedInner
	isSet bool
}

func (v NullableInfoResponseCoinHistoryReceivedInner) Get() *InfoResponseCoinHistoryReceivedInner {
	return v.value
}

func (v *NullableInfoResponseCoinHistoryReceivedInner) Set(val *InfoResponseCoinHistoryReceivedInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInfoResponseCoinHistoryReceivedInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInfoResponseCoinHistoryReceivedInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfoResponseCoinHistoryReceivedInner(val *InfoResponseCoinHistoryReceivedInner) *NullableInfoResponseCoinHistoryReceivedInner {
	return &NullableInfoResponseCoinHistoryReceivedInner{value: val, isSet: true}
}

func (v NullableInfoResponseCoinHistoryReceivedInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfoResponseCoinHistoryReceivedInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


