// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * API Avito shop
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() *DefaultAPIService {
	return &DefaultAPIService{}
}

// ApiInfoGet - Получить информацию о монетах, инвентаре и истории транзакций.
func (s *DefaultAPIService) ApiInfoGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ApiInfoGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, InfoResponse{}) or use other options such as http.Ok ...
	// return Response(200, InfoResponse{}), nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiInfoGet method not implemented")
}

// ApiSendCoinPost - Отправить монеты другому пользователю.
func (s *DefaultAPIService) ApiSendCoinPost(ctx context.Context, sendCoinRequest SendCoinRequest) (ImplResponse, error) {
	// TODO - update ApiSendCoinPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiSendCoinPost method not implemented")
}

// ApiBuyItemGet - Купить предмет за монеты.
func (s *DefaultAPIService) ApiBuyItemGet(ctx context.Context, item string) (ImplResponse, error) {
	// TODO - update ApiBuyItemGet with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(400, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(401, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(401, ErrorResponse{}), nil

	// TODO: Uncomment the next line to return response Response(500, ErrorResponse{}) or use other options such as http.Ok ...
	// return Response(500, ErrorResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ApiBuyItemGet method not implemented")
}

// ApiAuthPost - Аутентификация и получение JWT-токена. При первой аутентификации пользователь создается автоматически.
func (s *DefaultAPIService) ApiAuthPost(ctx context.Context, authRequest AuthRequest) (ImplResponse, error) {
	response, err := AuthenticateUser(authRequest)
	if err != nil {
		switch err.Error() {
		case "username and password are required":
			return Response(http.StatusBadRequest, ErrorResponse{Errors: err.Error()}), nil
		case "invalid credentials":
			return Response(http.StatusUnauthorized, ErrorResponse{Errors: err.Error()}), nil
		default:
			return Response(http.StatusInternalServerError, ErrorResponse{Errors: "failed to process request"}), nil
		}
	}
	return Response(http.StatusOK, response), nil
	return Response(http.StatusNotImplemented, nil), errors.New("ApiAuthPost method not implemented")
}
